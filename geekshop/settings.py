"""
Django settings for geekshop project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from configparser import RawConfigParser
from ast import literal_eval

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Create RawConfigParser instance and read a conf file with all that
# secret and critical settings shit
conf_parser = RawConfigParser()
conf_parser.read(os.path.join(BASE_DIR, 'conf', 'local.conf'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = conf_parser.get('keys', 'SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = conf_parser.getboolean('common', 'DEBUG', fallback=False)

INTERNAL_IPS = [
    '127.0.0.1',
]

ALLOWED_HOSTS = literal_eval(conf_parser.get('common', 'ALLOWED_HOSTS', fallback='[]'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
    'mainapp.apps.MainappConfig',
    'authapp.apps.AuthappConfig',
    'basketapp.apps.BasketappConfig',
    'adminapp.apps.AdminappConfig',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'geekshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'geekshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': conf_parser.get('db', 'ENGINE', fallback='django.db.backends.sqlite3'),
        'NAME': conf_parser.get('db', 'NAME', fallback=os.path.join(BASE_DIR, 'db.sqlite3')),
        'USER': conf_parser.get('db', 'USER', fallback=''),
        'PASSWORD': conf_parser.get('db', 'PASSWORD', fallback=''),
        'HOST': conf_parser.get('db', 'HOST', fallback=''),
        'PORT': conf_parser.get('db', 'PORT', fallback=''),
        'OPTIONS': literal_eval(conf_parser.get('db', 'OPTIONS', fallback='{}')),
    },
}

AUTH_USER_MODEL = 'authapp.ShopUser'

LOGIN_URL = '/auth/login/'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Mail stuff

ADMINS = literal_eval(conf_parser.get('mail', 'ADMINS', fallback='[]'))

MANAGERS = literal_eval(conf_parser.get('mail', 'MANAGERS', fallback='[]'))

EMAIL_HOST = 'mail.django.local'
EMAIL_PORT = 465
EMAIL_USE_SSL = True

# Some other stuff

FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880
FIRST_DAY_OF_WEEK = 1
SECURE_SSL_REDIRECT = False
SITE_ID = 1
